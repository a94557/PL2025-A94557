
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleft=<>LEGENEleft+-left*/DIVMODAND ARRAY ASSIGN BEGIN BOOLEAN DIV DO DOTDOT DOWNTO ELSE END FALSE FOR FUNCTION GE ID IF INTEGER LBRACKET LE MOD NE NOT NUMBER OF OR PROCEDURE PROGRAM RBRACKET READLN STRING STRING_TYPE THEN TO TRUE VAR WHILE WRITE WRITELNprogram : PROGRAM ID ";" block "."block : declarations BEGIN optional_statements ENDoptional_statements : statements\n                           | emptydeclarations : declarations declaration\n                    | declaration\n                    | emptydeclaration : VAR var_declarations\n                   | function_declarationvar_declarations : var_declarations var_declaration\n                        | var_declarationfunction_declaration : FUNCTION ID \'(\' param_list_opt \')\' \':\' type \';\' function_block \';\' function_block : VAR var_declarations BEGIN optional_statements END\n                      | BEGIN optional_statements ENDparam_list_opt : param_list\n                      | emptyparam_list : param_list \',\' param\n                  | paramparam : ID \':\' typeid_list : ID\n               | id_list \',\' IDvar_declaration : id_list ":" type ";"type : INTEGER\n            | BOOLEAN\n            | STRING_TYPE\n            | ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF typestatements : statements statement \';\'\n                  | statements statement\n                  | statement \';\'\n                  | statementstatement : assignment\n                 | if_statement\n                 | while_loop\n                 | for_loop\n                 | compound_statement\n                 | writeln\n                 | write\n                 | readln\n                 | emptyassignment : variable ASSIGN expressionif_statement : IF expression THEN statement ELSE statement\n                    | IF expression THEN statementvariable : IDvariable : variable LBRACKET expression RBRACKETwhile_loop : WHILE expression DO statementfor_loop : FOR ID ASSIGN expression TO expression DO statement\n                | FOR ID ASSIGN expression DOWNTO expression DO statementcompound_statement : BEGIN statements ENDexpression : STRINGwriteln : WRITELN "(" expression_list ")" write : WRITE "(" expression_list ")" readln : READLN "(" expression_list ")" expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression \'=\' expression\n                  | expression \'<\' expression\n                  | expression \'>\' expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression NE expressionexpression : NOT expressionexpression : "(" expression ")"expression : NUMBERexpression : TRUE\n                  | FALSEexpression : ID LBRACKET expression RBRACKETexpression : variableexpression : IDexpression_list : expression\n                       | expression_list "," expressionexpression : ID "(" expression_list_opt ")"expression_list_opt : expression_list\n                           | emptyempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,],[0,-1,]),'ID':([2,9,11,13,15,16,20,22,23,24,25,26,27,28,29,30,31,32,34,35,36,41,43,44,45,46,48,49,50,51,53,54,55,56,57,58,59,60,63,64,65,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,135,136,137,142,143,144,145,146,150,155,156,159,160,161,162,165,168,],[3,18,19,37,18,-11,37,37,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,59,59,62,-10,71,72,37,-39,-28,-29,59,59,-49,59,59,-69,-70,-71,-43,-73,59,59,59,-48,-27,-40,37,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-67,59,59,37,59,-22,72,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,59,-51,-52,37,-72,-77,59,59,-41,37,37,18,37,-46,-47,18,37,]),';':([3,13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,66,67,68,69,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,149,150,155,156,158,160,161,162,167,168,169,171,],[4,-80,-80,-80,-39,49,-31,-32,-33,-34,-35,-36,-37,-38,-80,-39,78,-29,-49,-69,-70,-71,-43,-73,106,-23,-24,-25,-48,-27,-40,-80,-67,-80,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,-80,-72,-77,154,-41,-80,-80,164,-80,-46,-47,-26,-80,-14,-13,]),'VAR':([4,6,7,8,10,14,15,16,41,106,154,164,],[9,9,-6,-7,-9,-5,-8,-11,-10,-22,159,-12,]),'BEGIN':([4,6,7,8,10,13,14,15,16,20,22,23,24,25,26,27,28,29,30,31,32,41,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,106,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,154,155,156,160,161,162,164,165,168,],[-80,13,-6,-7,-9,20,-5,-8,-11,20,20,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,-10,20,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,20,-67,20,-22,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,20,-72,-77,-41,160,20,20,20,-46,-47,-12,168,20,]),'FUNCTION':([4,6,7,8,10,14,15,16,41,106,164,],[11,11,-6,-7,-9,-5,-8,-11,-10,-22,-12,]),'.':([5,47,],[12,-2,]),'END':([13,20,21,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,166,168,170,],[-80,-80,47,-3,-4,-30,-31,-32,-33,-34,-35,-36,-37,-38,77,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,-80,-67,-80,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,-80,-72,-77,-41,-80,-80,-80,-46,-47,169,-80,171,]),'IF':([13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,168,],[34,34,34,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,34,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,34,-67,34,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,34,-72,-77,-41,34,34,34,-46,-47,34,]),'WHILE':([13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,168,],[35,35,35,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,35,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,35,-67,35,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,35,-72,-77,-41,35,35,35,-46,-47,35,]),'FOR':([13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,168,],[36,36,36,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,36,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,36,-67,36,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,36,-72,-77,-41,36,36,36,-46,-47,36,]),'WRITELN':([13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,168,],[38,38,38,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,38,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,38,-67,38,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,38,-72,-77,-41,38,38,38,-46,-47,38,]),'WRITE':([13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,168,],[39,39,39,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,39,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,39,-67,39,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,39,-72,-77,-41,39,39,39,-46,-47,39,]),'READLN':([13,20,22,23,24,25,26,27,28,29,30,31,32,45,46,48,49,53,56,57,58,59,60,77,78,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,160,161,162,168,],[40,40,40,-39,-30,-31,-32,-33,-34,-35,-36,-37,-38,40,-39,-28,-29,-49,-69,-70,-71,-43,-73,-48,-27,-40,40,-67,40,-44,-42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,40,-72,-77,-41,40,40,40,-46,-47,40,]),':':([17,18,71,72,109,],[42,-20,-21,108,140,]),',':([17,18,53,56,57,58,59,60,67,68,69,71,74,76,96,102,103,104,105,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,139,141,143,144,147,167,],[43,-20,-49,-69,-70,-71,-43,-73,-23,-24,-25,-21,110,-18,-67,135,-75,135,135,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,135,-19,-17,-72,-77,-76,-26,]),'(':([19,34,35,38,39,40,50,51,54,55,59,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,135,145,146,],[44,55,55,63,64,65,55,55,55,55,99,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ELSE':([25,26,27,28,29,30,31,32,46,53,56,57,58,59,60,77,79,81,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,136,137,142,143,144,150,155,156,161,162,],[-31,-32,-33,-34,-35,-36,-37,-38,-39,-49,-69,-70,-71,-43,-73,-48,-40,-80,-67,-80,-44,142,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-45,-50,-51,-52,-80,-72,-77,-41,-80,-80,-46,-47,]),'ASSIGN':([33,37,62,111,],[50,-43,101,-44,]),'LBRACKET':([33,37,59,60,70,111,],[51,-43,98,51,107,-44,]),'STRING':([34,35,50,51,54,55,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,135,145,146,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'NOT':([34,35,50,51,54,55,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,135,145,146,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NUMBER':([34,35,50,51,54,55,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,107,135,145,146,148,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,138,56,56,56,153,]),'TRUE':([34,35,50,51,54,55,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,135,145,146,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FALSE':([34,35,50,51,54,55,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,135,145,146,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'INTEGER':([42,108,140,163,],[67,67,67,67,]),'BOOLEAN':([42,108,140,163,],[68,68,68,68,]),'STRING_TYPE':([42,108,140,163,],[69,69,69,69,]),'ARRAY':([42,108,140,163,],[70,70,70,70,]),')':([44,53,56,57,58,59,60,67,68,69,73,74,75,76,96,97,99,102,103,104,105,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,139,141,143,144,147,167,],[-80,-49,-69,-70,-71,-43,-73,-23,-24,-25,109,-15,-16,-18,-67,127,-80,134,-75,136,137,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,144,-78,-79,-19,-17,-72,-77,-76,-26,]),'THEN':([52,53,56,57,58,59,60,96,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,143,144,],[81,-49,-69,-70,-71,-43,-73,-67,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-72,-77,]),'+':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[82,-49,-69,-70,-71,-43,-73,82,82,82,82,82,82,-44,-53,-54,-55,-56,-57,-58,82,82,82,82,82,82,82,82,-68,82,82,-72,-77,82,82,82,]),'-':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[83,-49,-69,-70,-71,-43,-73,83,83,83,83,83,83,-44,-53,-54,-55,-56,-57,-58,83,83,83,83,83,83,83,83,-68,83,83,-72,-77,83,83,83,]),'*':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[84,-49,-69,-70,-71,-43,-73,84,84,84,84,84,84,-44,84,84,-55,-56,-57,-58,84,84,84,84,84,84,84,84,-68,84,84,-72,-77,84,84,84,]),'/':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[85,-49,-69,-70,-71,-43,-73,85,85,85,85,85,85,-44,85,85,-55,-56,-57,-58,85,85,85,85,85,85,85,85,-68,85,85,-72,-77,85,85,85,]),'DIV':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[86,-49,-69,-70,-71,-43,-73,86,86,86,86,86,86,-44,86,86,-55,-56,-57,-58,86,86,86,86,86,86,86,86,-68,86,86,-72,-77,86,86,86,]),'MOD':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[87,-49,-69,-70,-71,-43,-73,87,87,87,87,87,87,-44,87,87,-55,-56,-57,-58,87,87,87,87,87,87,87,87,-68,87,87,-72,-77,87,87,87,]),'AND':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[88,-49,-69,-70,-71,-43,-73,88,88,88,-67,88,88,-44,-53,-54,-55,-56,-57,-58,-59,88,-61,-62,-63,-64,-65,-66,-68,88,88,-72,-77,88,88,88,]),'OR':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[89,-49,-69,-70,-71,-43,-73,89,89,89,-67,89,89,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,89,89,-72,-77,89,89,89,]),'=':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[90,-49,-69,-70,-71,-43,-73,90,90,90,90,90,90,-44,-53,-54,-55,-56,-57,-58,90,90,-61,-62,-63,-64,-65,-66,-68,90,90,-72,-77,90,90,90,]),'<':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[91,-49,-69,-70,-71,-43,-73,91,91,91,91,91,91,-44,-53,-54,-55,-56,-57,-58,91,91,-61,-62,-63,-64,-65,-66,-68,91,91,-72,-77,91,91,91,]),'>':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[92,-49,-69,-70,-71,-43,-73,92,92,92,92,92,92,-44,-53,-54,-55,-56,-57,-58,92,92,-61,-62,-63,-64,-65,-66,-68,92,92,-72,-77,92,92,92,]),'LE':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[93,-49,-69,-70,-71,-43,-73,93,93,93,93,93,93,-44,-53,-54,-55,-56,-57,-58,93,93,-61,-62,-63,-64,-65,-66,-68,93,93,-72,-77,93,93,93,]),'GE':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[94,-49,-69,-70,-71,-43,-73,94,94,94,94,94,94,-44,-53,-54,-55,-56,-57,-58,94,94,-61,-62,-63,-64,-65,-66,-68,94,94,-72,-77,94,94,94,]),'NE':([52,53,56,57,58,59,60,61,79,80,96,97,103,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,143,144,147,151,152,],[95,-49,-69,-70,-71,-43,-73,95,95,95,95,95,95,-44,-53,-54,-55,-56,-57,-58,95,95,-61,-62,-63,-64,-65,-66,-68,95,95,-72,-77,95,95,95,]),'DO':([53,56,57,58,59,60,61,96,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,143,144,151,152,],[-49,-69,-70,-71,-43,-73,100,-67,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-72,-77,155,156,]),'RBRACKET':([53,56,57,58,59,60,80,96,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,143,144,153,],[-49,-69,-70,-71,-43,-73,111,-67,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,143,-72,-77,157,]),'TO':([53,56,57,58,59,60,96,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,143,144,],[-49,-69,-70,-71,-43,-73,-67,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,145,-72,-77,]),'DOWNTO':([53,56,57,58,59,60,96,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,143,144,],[-49,-69,-70,-71,-43,-73,-67,-44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,146,-72,-77,]),'DOTDOT':([138,],[148,]),'OF':([157,],[163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([4,],[5,]),'declarations':([4,],[6,]),'declaration':([4,6,],[7,14,]),'empty':([4,13,20,22,44,45,81,99,100,142,155,156,160,168,],[8,23,46,46,75,46,46,131,46,46,46,46,23,23,]),'function_declaration':([4,6,],[10,10,]),'var_declarations':([9,159,],[15,165,]),'var_declaration':([9,15,159,165,],[16,41,16,41,]),'id_list':([9,15,159,165,],[17,17,17,17,]),'optional_statements':([13,160,168,],[21,166,170,]),'statements':([13,20,160,168,],[22,45,22,22,]),'statement':([13,20,22,45,81,100,142,155,156,160,168,],[24,24,48,48,112,132,150,161,162,24,24,]),'assignment':([13,20,22,45,81,100,142,155,156,160,168,],[25,25,25,25,25,25,25,25,25,25,25,]),'if_statement':([13,20,22,45,81,100,142,155,156,160,168,],[26,26,26,26,26,26,26,26,26,26,26,]),'while_loop':([13,20,22,45,81,100,142,155,156,160,168,],[27,27,27,27,27,27,27,27,27,27,27,]),'for_loop':([13,20,22,45,81,100,142,155,156,160,168,],[28,28,28,28,28,28,28,28,28,28,28,]),'compound_statement':([13,20,22,45,81,100,142,155,156,160,168,],[29,29,29,29,29,29,29,29,29,29,29,]),'writeln':([13,20,22,45,81,100,142,155,156,160,168,],[30,30,30,30,30,30,30,30,30,30,30,]),'write':([13,20,22,45,81,100,142,155,156,160,168,],[31,31,31,31,31,31,31,31,31,31,31,]),'readln':([13,20,22,45,81,100,142,155,156,160,168,],[32,32,32,32,32,32,32,32,32,32,32,]),'variable':([13,20,22,34,35,45,50,51,54,55,63,64,65,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,135,142,145,146,155,156,160,168,],[33,33,33,60,60,33,60,60,60,60,60,60,60,33,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,33,60,60,33,60,60,33,33,33,33,]),'expression':([34,35,50,51,54,55,63,64,65,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,101,135,145,146,],[52,61,79,80,96,97,103,103,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,103,133,147,151,152,]),'type':([42,108,140,163,],[66,139,149,167,]),'param_list_opt':([44,],[73,]),'param_list':([44,],[74,]),'param':([44,110,],[76,141,]),'expression_list':([63,64,65,99,],[102,104,105,130,]),'expression_list_opt':([99,],[129,]),'function_block':([154,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID ; block .','program',5,'p_program','analisador_sintatico.py',23),
  ('block -> declarations BEGIN optional_statements END','block',4,'p_block','analisador_sintatico.py',27),
  ('optional_statements -> statements','optional_statements',1,'p_optional_statements','analisador_sintatico.py',31),
  ('optional_statements -> empty','optional_statements',1,'p_optional_statements','analisador_sintatico.py',32),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','analisador_sintatico.py',36),
  ('declarations -> declaration','declarations',1,'p_declarations','analisador_sintatico.py',37),
  ('declarations -> empty','declarations',1,'p_declarations','analisador_sintatico.py',38),
  ('declaration -> VAR var_declarations','declaration',2,'p_declaration','analisador_sintatico.py',47),
  ('declaration -> function_declaration','declaration',1,'p_declaration','analisador_sintatico.py',48),
  ('var_declarations -> var_declarations var_declaration','var_declarations',2,'p_var_declarations','analisador_sintatico.py',55),
  ('var_declarations -> var_declaration','var_declarations',1,'p_var_declarations','analisador_sintatico.py',56),
  ('function_declaration -> FUNCTION ID ( param_list_opt ) : type ; function_block ;','function_declaration',10,'p_function_declaration','analisador_sintatico.py',63),
  ('function_block -> VAR var_declarations BEGIN optional_statements END','function_block',5,'p_function_block','analisador_sintatico.py',68),
  ('function_block -> BEGIN optional_statements END','function_block',3,'p_function_block','analisador_sintatico.py',69),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','analisador_sintatico.py',76),
  ('param_list_opt -> empty','param_list_opt',1,'p_param_list_opt','analisador_sintatico.py',77),
  ('param_list -> param_list , param','param_list',3,'p_param_list','analisador_sintatico.py',81),
  ('param_list -> param','param_list',1,'p_param_list','analisador_sintatico.py',82),
  ('param -> ID : type','param',3,'p_param','analisador_sintatico.py',89),
  ('id_list -> ID','id_list',1,'p_id_list','analisador_sintatico.py',93),
  ('id_list -> id_list , ID','id_list',3,'p_id_list','analisador_sintatico.py',94),
  ('var_declaration -> id_list : type ;','var_declaration',4,'p_var_declaration','analisador_sintatico.py',102),
  ('type -> INTEGER','type',1,'p_type','analisador_sintatico.py',106),
  ('type -> BOOLEAN','type',1,'p_type','analisador_sintatico.py',107),
  ('type -> STRING_TYPE','type',1,'p_type','analisador_sintatico.py',108),
  ('type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type','type',8,'p_type','analisador_sintatico.py',109),
  ('statements -> statements statement ;','statements',3,'p_statements','analisador_sintatico.py',124),
  ('statements -> statements statement','statements',2,'p_statements','analisador_sintatico.py',125),
  ('statements -> statement ;','statements',2,'p_statements','analisador_sintatico.py',126),
  ('statements -> statement','statements',1,'p_statements','analisador_sintatico.py',127),
  ('statement -> assignment','statement',1,'p_statement','analisador_sintatico.py',140),
  ('statement -> if_statement','statement',1,'p_statement','analisador_sintatico.py',141),
  ('statement -> while_loop','statement',1,'p_statement','analisador_sintatico.py',142),
  ('statement -> for_loop','statement',1,'p_statement','analisador_sintatico.py',143),
  ('statement -> compound_statement','statement',1,'p_statement','analisador_sintatico.py',144),
  ('statement -> writeln','statement',1,'p_statement','analisador_sintatico.py',145),
  ('statement -> write','statement',1,'p_statement','analisador_sintatico.py',146),
  ('statement -> readln','statement',1,'p_statement','analisador_sintatico.py',147),
  ('statement -> empty','statement',1,'p_statement','analisador_sintatico.py',148),
  ('assignment -> variable ASSIGN expression','assignment',3,'p_assignment','analisador_sintatico.py',152),
  ('if_statement -> IF expression THEN statement ELSE statement','if_statement',6,'p_if_statement','analisador_sintatico.py',157),
  ('if_statement -> IF expression THEN statement','if_statement',4,'p_if_statement','analisador_sintatico.py',158),
  ('variable -> ID','variable',1,'p_variable_id','analisador_sintatico.py',165),
  ('variable -> variable LBRACKET expression RBRACKET','variable',4,'p_variable_array_access','analisador_sintatico.py',169),
  ('while_loop -> WHILE expression DO statement','while_loop',4,'p_while_loop','analisador_sintatico.py',174),
  ('for_loop -> FOR ID ASSIGN expression TO expression DO statement','for_loop',8,'p_for_loop','analisador_sintatico.py',178),
  ('for_loop -> FOR ID ASSIGN expression DOWNTO expression DO statement','for_loop',8,'p_for_loop','analisador_sintatico.py',179),
  ('compound_statement -> BEGIN statements END','compound_statement',3,'p_compound_statement','analisador_sintatico.py',184),
  ('expression -> STRING','expression',1,'p_expression_string','analisador_sintatico.py',188),
  ('writeln -> WRITELN ( expression_list )','writeln',4,'p_statement_writeln','analisador_sintatico.py',192),
  ('write -> WRITE ( expression_list )','write',4,'p_statement_write','analisador_sintatico.py',196),
  ('readln -> READLN ( expression_list )','readln',4,'p_statement_readln','analisador_sintatico.py',200),
  ('expression -> expression + expression','expression',3,'p_expression_binop','analisador_sintatico.py',204),
  ('expression -> expression - expression','expression',3,'p_expression_binop','analisador_sintatico.py',205),
  ('expression -> expression * expression','expression',3,'p_expression_binop','analisador_sintatico.py',206),
  ('expression -> expression / expression','expression',3,'p_expression_binop','analisador_sintatico.py',207),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','analisador_sintatico.py',208),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','analisador_sintatico.py',209),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','analisador_sintatico.py',210),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','analisador_sintatico.py',211),
  ('expression -> expression = expression','expression',3,'p_expression_binop','analisador_sintatico.py',212),
  ('expression -> expression < expression','expression',3,'p_expression_binop','analisador_sintatico.py',213),
  ('expression -> expression > expression','expression',3,'p_expression_binop','analisador_sintatico.py',214),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','analisador_sintatico.py',215),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','analisador_sintatico.py',216),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','analisador_sintatico.py',217),
  ('expression -> NOT expression','expression',2,'p_expression_not','analisador_sintatico.py',221),
  ('expression -> ( expression )','expression',3,'p_expression_group','analisador_sintatico.py',225),
  ('expression -> NUMBER','expression',1,'p_expression_number','analisador_sintatico.py',229),
  ('expression -> TRUE','expression',1,'p_expression_boolean','analisador_sintatico.py',233),
  ('expression -> FALSE','expression',1,'p_expression_boolean','analisador_sintatico.py',234),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','analisador_sintatico.py',239),
  ('expression -> variable','expression',1,'p_expression_variable','analisador_sintatico.py',243),
  ('expression -> ID','expression',1,'p_expression_id','analisador_sintatico.py',247),
  ('expression_list -> expression','expression_list',1,'p_expression_list','analisador_sintatico.py',251),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','analisador_sintatico.py',252),
  ('expression -> ID ( expression_list_opt )','expression',4,'p_expression_function_call','analisador_sintatico.py',259),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','analisador_sintatico.py',263),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','analisador_sintatico.py',264),
  ('empty -> <empty>','empty',0,'p_empty','analisador_sintatico.py',268),
]
